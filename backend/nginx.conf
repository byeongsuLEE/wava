upstream back_blue{
        server localhost:8080;
}
upstream back_green{
        server localhost:8081;
}

map $http_origin $cors_header{
        default "";
        "https://localhost:3000" "$http_origin";
}



server {

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot

    server_name i11c204.p.ssafy.io;

    include /etc/nginx/conf.d/service_env.inc; # blue , green 서버이름 변수

    root /usr/share/nginx/html; # nginx
    index index.html index.htm;

    location / {
       # proxy_set_header X-Real-IP $remote_addr;
       # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       # proxy_set_header Host $http_host;
	   try_files $uri $uri/ /index.html;  # SPA를 위한 설정
    }

    location /api {  # blue green settings
        proxy_pass http://$backserver_url;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        add_header 'Access-Control-Allow-Origin' $cors_header;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';

    }

    # encrypt get
    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    #error
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }


    ssl_certificate /etc/letsencrypt/live/i11c204.p.ssafy.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/i11c204.p.ssafy.io/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = i11c204.p.ssafy.io) {
        return 301 https://$host$request_uri;
    }



    listen       80;
    listen  [::]:80;
    server_name _;
    return 404; # managed by Certbot
}

